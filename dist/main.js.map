{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/game.js","webpack:///./src/game_view.js","webpack:///./src/index.js","webpack:///./src/moving_object.js","webpack:///./src/obstacles.js","webpack:///./src/squirrel.js","webpack:///./src/util.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAsC;AACD;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,qDAAQ;AAClC;AACA,KAAK,4BAA4B,oDAAQ;AACzC;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,oDAAQ;;AAEjC;AACA;AACA;;AAEA;AACA;AACA,yCAAyC,wBAAwB;AACjE;AACA,qBAAqB,qDAAQ,EAAE,gBAAgB;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,qDAAQ,EAAE,gBAAgB;AAC7C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEe,mEAAI,E;;;;;;;;;;;;ACjGnB;AAAA;AAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,gDAAI;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;;AAEA;;AAEe,uEAAQ,E;;;;;;;;;;;;AClDvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AACT;AACC;AACT;AACQ;;AAErC,sBAAsB,yDAAY;AAClC,kBAAkB,oDAAQ;AAC1B,kBAAkB,qDAAQ;AAC1B,cAAc,gDAAI;AAClB,kBAAkB,qDAAQ;;AAE1B;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,gDAAI;AACvB,sBAAsB,qDAAQ;AAC9B;AACA,CAAC,C;;;;;;;;;;;;ACrBD;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEe,2EAAY,E;;;;;;;;;;;;AC3B3B;AAAA;AAAA;AAAA;AAA8C;AACjB;;AAE7B;AACA;;AAEA,uBAAuB,yDAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,+CAAI,oBAAoB,yDAAY;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,uEAAQ,E;;;;;;;;;;;;AC3BvB;AAAA;AAAA;AAAA;AAA8C;AACjB;;AAE7B;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,yDAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,+CAAI,oBAAoB,yDAAY;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,K;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,uEAAQ,E;;;;;;;;;;;AC1HvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA,sB","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import Obstacle from './obstacles.js';\nimport Squirrel from './squirrel.js';\n\nclass Game {\n  constructor() {\n    this.DIM_X = 900;\n    this.DIM_Y = 900;\n    this.NUM_OBSTACLES = 10;\n    this.OBSTACLES = [];\n    this.squirrels = [];\n  }\n  \n  add(object) {\n    if (object instanceof Obstacle) {\n      this.OBSTACLES.push(object);\n    } else if (object instanceof Squirrel) {\n      this.squirrels.push(object);\n    } else {\n      debugger\n      throw new Error('unknown object');\n    }\n  }\n  \n  addSquirrel() {\n    const squirrel = new Squirrel();\n    \n    this.add(squirrel);\n    return squirrel;\n  }\n  \n  addObstacles(){\n    if (this.OBSTACLES.length < this.NUM_OBSTACLES) {\n      for (let i = this.OBSTACLES.length; i < this.NUM_OBSTACLES; i++) {\n        let pos = this.randomPosition();\n        this.add(new Obstacle({pos, game: this}));\n      }\n    }\n  }\n  \n  addObstacle() {\n    if (this.OBSTACLES.length < this.NUM_OBSTACLES) {\n      let pos = this.randomPosition();\n      this.add(new Obstacle({pos, game: this}));\n    }\n  }\n  \n  randomPosition() {\n    let x = Math.random();\n    x = x > 0.5 ? 535 : 685;\n    let pos = [x, -70];\n    \n    return pos;\n  }\n  \n  draw(ctx) {\n    ctx.clearRect(0, 0, this.DIM_X, this.DIM_Y);\n    this.OBSTACLES.forEach(tree => tree.draw(ctx)); \n    this.squirrels.forEach(squirrel => squirrel.draw(ctx));\n  }\n  \n  moveObjects() {\n    this.OBSTACLES.forEach(tree => tree.move());\n  }\n  \n  removeObjects() {\n    let currentObstacles = [];\n    this.OBSTACLES.forEach(tree => {\n      if (tree.pos[1] < this.DIM_Y + tree.radius) {\n        currentObstacles.push(tree);\n      }\n    })\n    this.OBSTACLES = currentObstacles;\n  }\n\n  detectCollision() {\n    const squirrel = this.squirrels[0];\n    let dead = false;\n    this.OBSTACLES.forEach(tree => {\n      if (this.beenHit(squirrel, tree)) {\n        dead = true;\n      }\n    })\n    return dead;\n  }\n\n  beenHit(squirrel, tree) {\n    if (squirrel.pos[0] < tree.pos[0] + tree.size[0] &&\n        squirrel.pos[0] + squirrel.size[0] > tree.pos[0] &&\n        squirrel.pos[1] < tree.pos[1] + tree.size[1] &&\n        squirrel.pos[1] + squirrel.size[1] > tree.pos[1]) {\n      debugger;\n      return true;\n    }\n  }\n  \n}\n\nexport default Game;","import Game from './game.js';\n\nclass GameView {\n  constructor(game, ctx) {\n    this.game = game;\n    this.ctx = ctx;\n    this.squirrel = this.game.addSquirrel();\n    this.gameId = '';\n    this.obstacleId = '';\n    this.moves = {\n      d: 'left',\n      f: 'right',\n    }\n  }\n\n  restart() {\n    this.game = new Game();\n    this.squirrel = this.game.addSquirrel();\n  }\n\n  bindKeyHandlers() {\n    const squirrel = this.squirrel;\n    document.addEventListener('keypress', (e) => {\n      Object.keys(this.moves).forEach((k) => {\n        if (k === e.key) {squirrel.step(this.moves[k])};\n      });\n    })\n  }\n\n  start() {\n    this.bindKeyHandlers();\n    const that = this;\n    this.gameId = setInterval( function() {\n      that.game.moveObjects();\n      that.game.removeObjects();\n      that.game.draw(that.ctx);\n      if (that.game.detectCollision()) {\n        alert('you died');\n        that.restart();\n      }\n    }, 20);\n\n    this.obstacleId = setInterval( function() {\n      that.game.addObstacle()\n    }, 1000)\n\n  }\n\n}\n\nexport default GameView;","import MovingObject from './moving_object.js';\nimport Squirrel from './squirrel.js';\nimport Obstacle from './obstacles.js';\nimport Game from './game.js';\nimport GameView from './game_view.js'\n\nwindow.MovingObject = MovingObject;\nwindow.Squirrel = Squirrel;\nwindow.Obstacle = Obstacle;\nwindow.Game = Game;\nwindow.GameView = GameView;\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const canvas = document.getElementById('game-canvas');\n  console.log(\"It's working! It's working!\");\n  const ctx = canvas.getContext('2d')\n  window.ctx = ctx;\n\n  const game = new Game();\n  const newGame = new GameView(game, ctx);\n  newGame.start();\n})","class MovingObject {\n  constructor(options) {\n    this.pos = options.pos;\n    this.speed = options.speed;\n    this.radius = options.radius;\n    this.color = options.color;\n  }\n  \n  draw(ctx) {\n    ctx.beginPath();\n    ctx.arc(this.pos[0], this.pos[1], this.radius, 0, 2 * Math.PI);\n    ctx.fillStyle = this.color;\n    ctx.fill();\n    ctx.strokeStyle = 'black';\n    ctx.lineWidth = 1;\n    ctx.stroke();\n  }\n\n  move() {\n    let position = this.pos;\n    let speed = this.speed;\n  \n    this.pos = [position[0], position[1] + speed];\n  }\n\n}\n\nexport default MovingObject;","import MovingObject from './moving_object.js';\nimport Util from './util.js';\n\nconst COLOR = 'blue';\nconst RADIUS = 70;\n\nclass Obstacle extends MovingObject {\n  constructor(options) {\n    options.speed = 5;\n    options.radius = RADIUS;\n    options.color = COLOR;\n    super(options);\n    this.size = [100, 40]\n    Util.inherits(Obstacle, MovingObject);\n  }\n\n  draw(ctx) {\n    ctx.beginPath();\n    ctx.rect(this.pos[0], this.pos[1], this.size[0], this.size[1]);\n    ctx.fillStyle = this.color;\n    ctx.fill();\n    ctx.strokeStyle = 'black';\n    ctx.lineWidth = 1;\n    ctx.stroke();\n  }\n}\n\nexport default Obstacle;","import MovingObject from './moving_object.js';\nimport Util from './util.js';\n\nconst COLOR = 'orange';\nconst RADIUS = 40;\nconst POS = [545, 600];\nconst SIZE = [40, 80]\nconst SPEED = 10;\n\nclass Squirrel extends MovingObject {\n  constructor() {\n    debugger\n    let options = {};\n    options.radius = RADIUS;\n    options.color = COLOR;\n    options.pos = POS;\n    options.speed = SPEED;\n    super(options);\n    this.moving = false;\n    this.size = SIZE;\n    Util.inherits(Squirrel, MovingObject);\n  }\n\n  draw(ctx) {\n    ctx.beginPath();\n    ctx.rect(this.pos[0], this.pos[1], this.size[0], this.size[1]);\n    ctx.fillStyle = this.color;\n    ctx.fill();\n    ctx.strokeStyle = 'black';\n    ctx.lineWidth = 1;\n    ctx.stroke();\n  }\n\n  step(direction) {\n    if (direction === 'left' && this.moving === false) {\n      this.moving = true;\n      this.leftMovement();\n    } else if (direction === 'right' && this.moving === false) {\n      this.moving = true;\n      this.rightMovement();\n    }\n  }\n\n  leftMovement() {\n    if (this.pos[0] === 565) {\n      this.jumpLeft();\n    } else {\n      this.moveLeft();\n    }\n  }\n  \n  rightMovement() {\n    if (this.pos[0] === 715) {\n      this.jumpRight();\n    } else {\n      this.moveRight();\n    }\n  }\n\n  jumpLeft() {\n    this.pos[0] -= 7\n    this.jumpAnimationLeft = requestAnimationFrame(this.jumpLeft.bind(this))\n    if (this.pos[0] < 440) {\n      this.pos[0] = 440;\n      cancelAnimationFrame(this.jumpAnimationLeft);\n      setTimeout(() => this.jumpBack(), 300);\n    }\n  }\n  \n  moveLeft() {\n    this.pos[0] -= 7\n    this.moveAnimationLeft = requestAnimationFrame(this.moveLeft.bind(this))\n    \n    if (this.pos[0] <= 565) {\n      this.pos[0] = 565;\n      this.moving = false;\n      cancelAnimationFrame(this.moveAnimationLeft);\n    }\n  }\n  \n  jumpRight() {\n    this.pos[0] += 7\n    this.jumpAnimationRight = requestAnimationFrame(this.jumpRight.bind(this))\n    if (this.pos[0] > 840) {\n      this.pos[0] = 840;\n      cancelAnimationFrame(this.jumpAnimationRight);\n      setTimeout(() => this.jumpBack(), 300);\n    }\n  }\n  \n  moveRight() {\n    this.pos[0] += 7\n    this.moveAnimationRight = requestAnimationFrame(this.moveRight.bind(this))\n\n    if (this.pos[0] >= 715) {\n      this.pos[0] = 715;\n      this.moving = false;\n      cancelAnimationFrame(this.moveAnimationRight);\n    }\n  }\n  \n  jumpBack() {\n    let distance;\n    let location;\n    if (this.pos[0] < 640) {\n      distance = 7;\n      location = 565;\n    } else {\n      distance = -7;\n      location = 715;\n    } \n\n    this.pos[0] += distance;\n    this.jumpAnimationBack = requestAnimationFrame(this.jumpBack.bind(this))\n    if ((distance === -7 && this.pos[0] <= 715) || (distance === 7 && this.pos[0] >= 565)) {\n      this.pos[0] = location;\n      this.moving = false;\n      cancelAnimationFrame(this.jumpAnimationBack);\n    }\n  }\n}\n  \nexport default Squirrel;","const Util = {\n  inherits(childClass, parentClass) {\n    function Surrogate() {};\n    Surrogate.prototype = parentClass.prototype;\n    childClass.prototype = new Surrogate();\n    childClass.prototype.constructor = childClass;\n  },\n};\n\nmodule.exports = Util;"],"sourceRoot":""}